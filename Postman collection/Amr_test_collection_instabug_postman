{
	"info": {
		"_postman_id": "f383b3f4-51a4-4086-956d-a13a41dd5894",
		"name": "API Playground",
		"description": "These requests showcase some of the things you can do with the API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Highest Priced Products",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:3030/products?$sort[price]=-1",
					"host": [
						"localhost"
					],
					"port": "3030",
					"path": [
						"products"
					],
					"query": [
						{
							"key": "$sort[price]",
							"value": "-1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Store Parameter Validation",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.visualizer.set(\"bad request\");",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{      \n\t  \"name\": \"hi\",\n      \"type\": \"\",\n      \"address\": \"123 Fake St\",\n      \"address2\": \"\",\n      \"city\": \"Springfield\",\n      \"state\": \"MN\",\n      \"zip\": \"55123\",\n      \"lat\": 44.969658,\n      \"lng\": -93.449539,\n      \"hours\": \"Mon: 10-9; Tue: 10-9; Wed: 10-9; Thurs: 10-9; Fri: 10-9; Sat: 10-9; Sun: 10-8\"\n}"
				},
				"url": {
					"raw": "http://localhost:3030/stores",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3030",
					"path": [
						"stores"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check Get Product Security",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "http://localhost:3030/products/9999695",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3030",
					"path": [
						"products",
						"9999695"
					]
				},
				"description": "Returns all products that match the given filter criteria. If no filters are included, defaults to returning a paginated list of all products."
			},
			"response": []
		},
		{
			"name": "Create Product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"const productData = JSON.parse(pm.environment.get(\"product_data\"));",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Same Price\", function () {",
							"    pm.expect(jsonData.price).to.equal(88);",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const productData = {",
							" ",
							"\t\"name\": \"New Product\",",
							"\t\"type\": \"Hard Good\",",
							"\t\"upc\": \"12345676\",",
							"\t\"price\": 88,",
							"\t\"description\": \"This is a placeholder request for creating a new product.\",",
							"\t\"model\": \"NP12345\"",
							"}",
							"",
							"console.log(JSON.stringify(productData));",
							"pm.environment.set(\"product_data\", JSON.stringify(productData));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{product_data}}"
				},
				"url": {
					"raw": "http://localhost:3030/products",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3030",
					"path": [
						"products"
					]
				},
				"description": "Creates a new product"
			},
			"response": []
		},
		{
			"name": "Create False Product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"const productData = JSON.parse(pm.environment.get(\"product_data\"));",
							"",
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const productData = {",
							" ",
							"\t\"name\": \"<script>alert(1) </script>\",",
							"\t\"type\": \"Hard Good\",",
							"\t\"upc\": \"12345676\",",
							"\t\"price\": 88,",
							"\t\"description\": \"This is a placeholder request for creating a new product.\",",
							"\t\"model\": \"NP12345\"",
							"}",
							"",
							"console.log(JSON.stringify(productData));",
							"pm.environment.set(\"product_data\", JSON.stringify(productData));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{product_data}}"
				},
				"url": {
					"raw": "http://localhost:3030/products",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3030",
					"path": [
						"products"
					]
				},
				"description": "Creates a new product"
			},
			"response": []
		}
	]
}